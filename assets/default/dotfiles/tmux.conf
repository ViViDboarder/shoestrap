# set default shell
set-option -g default-shell $SHELL

# Sets xterm window title
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I] #W'

# look good
set -g default-terminal 'screen-256color'
set -as terminal-overrides ',*256col*:Tc:sitm=\E[3m'

# update prefix
unbind C-b
set -g prefix C-q

# easy splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind _ split-window -c "#{pane_current_path}"

# move between panes
bind C-q select-pane -t :.+
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# swap panes
bind -r J swap-pane -D
bind -r K swap-pane -U
# move panes
bind C-j command-prompt -p "Join pane from:"  "join-pane -s '%%'"
bind C-s command-prompt -p "Send pane to:"  "join-pane -t '%%'"
bind C-b break-pane

# based on https://stackoverflow.com/a/40902312/1046584
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# New keybindings for vi-mode
# https://github.com/tmux/tmux/issues/754
setw -g mode-keys vi
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
   'bind -T copy-mode-vi v send-keys -X begin-selection ; \
      bind -T copy-mode-vi C-v send-keys -X rectangle-toggle ; \
   bind -T copy-mode-vi y send-keys -X copy-selection ; \
   bind -T copy-mode-vi H send-keys -X start-of-line ; \
   bind -T copy-mode-vi L send-keys -X end-of-line ; \
   bind -T choice-mode-vi h send-keys -X tree-collapse ; \
   bind -T choice-mode-vi l send-keys -X tree-expand ; \
   bind -T choice-mode-vi H send-keys -X tree-collapse-all ; \
   bind -T choice-mode-vi L send-keys -X tree-expand-all ; \
   bind -T copy-mode-emacs MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"; \
   bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"; ' \
      'bind -t vi-copy v begin-selection; \
         bind -t vi-copy C-v rectangle-toggle; \
   bind -t vi-copy y copy-selection; \
   bind -t vi-choice h tree-collapse; \
   bind -t vi-choice l tree-expand; \
   bind -t vi-choice H tree-collapse-all; \
   bind -t vi-choice L tree-expand-all; \
   bind -t emacs-copy MouseDragEnd1Pane copy-pipe "pbcopy"; \
   bind -t vi-copy MouseDragEnd1Pane copy-pipe "pbcopy"; '

# bind p for put
unbind p
bind p paste-buffer
# rebind previous-window
bind b previous-window

# after copying to a tmux buffer, hit y again to copy to clipboard
unbind y
if-shell 'test "$(uname -s)" = "Darwin"' 'bind y run "tmux show-buffer | pbcopy"'
if-shell 'test "$(uname -s)" = "Linux"' 'bind y run "tmux show-buffer | xclip -sel clip -i"'

# Auto load tmuxline config for themes
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"

# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
